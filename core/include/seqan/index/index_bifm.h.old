// ==========================================================================
//                 SeqAn - The Library for Sequence Analysis
// ==========================================================================
// Copyright (c) 2006-2013, Knut Reinert, FU Berlin
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above copyright
//       notice, this list of conditions and the following disclaimer in the
//       documentation and/or other materials provided with the distribution.
//     * Neither the name of Knut Reinert or the FU Berlin nor the names of
//       its contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
// ARE DISCLAIMED. IN NO EVENT SHALL KNUT REINERT OR THE FU BERLIN BE LIABLE
// FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
// DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
// SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
// CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
// LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
// OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
// DAMAGE.
//
// ==========================================================================
// Author: Christopher Pockrandt <christopher.pockrandt@fu-berlin.de>
// ==========================================================================

//SEQAN_NO_DDDOC:do not generate documentation for this file

#ifndef INDEX_BIFM_H_
#define INDEX_BIFM_H_

namespace seqan {

// ==========================================================================
// Forwards
// ==========================================================================

template <typename TOccSpec = WT<>, typename TSpec = void>
class BidirectionalFMIndex;

// ==========================================================================
// Classes
// ==========================================================================

// ----------------------------------------------------------------------------
// Spec BidirectionalFMIndex
// ----------------------------------------------------------------------------

// TODO:christopher: documentation, comments
template <typename TText, typename TOccSpec, typename TSpec>
class Index<TText, BidirectionalFMIndex<TOccSpec, TSpec> >
{
	typedef ModifiedString<TText, ModReverse>				TRevText;
	typedef Index<TRevText, FMIndex<TOccSpec, TSpec> >		TRevIndex;
	typedef Index<TText, FMIndex<TOccSpec, TSpec> >			TIndex;

	public:

	TRevText		revText;
	TRevIndex		rev;
	TIndex			fwd;

	Index()	{}

	Index(TText & text, unsigned compressionFactor = 10) :
		revText(text),
		rev(revText, compressionFactor),
		fwd(text, compressionFactor)
	{}
};

}
#endif /* INDEX_BIFM_H_ */
